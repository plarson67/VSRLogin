//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VSRLoginWeb.VSRService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/DIR.Authentication.Service")]
    [System.SerializableAttribute()]
    public partial class ErrorDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.errorCodeField, value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrowserFault", Namespace="http://schemas.datacontract.org/2004/07/DIR.Authentication.Service")]
    [System.SerializableAttribute()]
    public partial class BrowserFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.errorCodeField, value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VSRService.IDIRAuthService")]
    public interface IDIRAuthService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/GetSession", ReplyAction="http://tempuri.org/IDIRAuthService/GetSessionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VSRLoginWeb.VSRService.ErrorDetail), Action="http://tempuri.org/IDIRAuthService/GetSessionErrorDetailFault", Name="ErrorDetail", Namespace="http://schemas.datacontract.org/2004/07/DIR.Authentication.Service")]
        [System.ServiceModel.FaultContractAttribute(typeof(VSRLoginWeb.VSRService.BrowserFault), Action="http://tempuri.org/IDIRAuthService/GetSessionBrowserFaultFault", Name="BrowserFault", Namespace="http://schemas.datacontract.org/2004/07/DIR.Authentication.Service")]
        string GetSession(string userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/GetSession", ReplyAction="http://tempuri.org/IDIRAuthService/GetSessionResponse")]
        System.Threading.Tasks.Task<string> GetSessionAsync(string userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/ValidateSessionID", ReplyAction="http://tempuri.org/IDIRAuthService/ValidateSessionIDResponse")]
        string ValidateSessionID(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/ValidateSessionID", ReplyAction="http://tempuri.org/IDIRAuthService/ValidateSessionIDResponse")]
        System.Threading.Tasks.Task<string> ValidateSessionIDAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/ExtendSession", ReplyAction="http://tempuri.org/IDIRAuthService/ExtendSessionResponse")]
        string ExtendSession(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/ExtendSession", ReplyAction="http://tempuri.org/IDIRAuthService/ExtendSessionResponse")]
        System.Threading.Tasks.Task<string> ExtendSessionAsync(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/SessionTimeout", ReplyAction="http://tempuri.org/IDIRAuthService/SessionTimeoutResponse")]
        void SessionTimeout(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDIRAuthService/SessionTimeout", ReplyAction="http://tempuri.org/IDIRAuthService/SessionTimeoutResponse")]
        System.Threading.Tasks.Task SessionTimeoutAsync(string sessionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDIRAuthServiceChannel : VSRLoginWeb.VSRService.IDIRAuthService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DIRAuthServiceClient : System.ServiceModel.ClientBase<VSRLoginWeb.VSRService.IDIRAuthService>, VSRLoginWeb.VSRService.IDIRAuthService {
        
        public DIRAuthServiceClient() {
        }
        
        public DIRAuthServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DIRAuthServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DIRAuthServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DIRAuthServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetSession(string userInfo) {
            return base.Channel.GetSession(userInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetSessionAsync(string userInfo) {
            return base.Channel.GetSessionAsync(userInfo);
        }
        
        public string ValidateSessionID(string sessionID) {
            return base.Channel.ValidateSessionID(sessionID);
        }
        
        public System.Threading.Tasks.Task<string> ValidateSessionIDAsync(string sessionID) {
            return base.Channel.ValidateSessionIDAsync(sessionID);
        }
        
        public string ExtendSession(string sessionID) {
            return base.Channel.ExtendSession(sessionID);
        }
        
        public System.Threading.Tasks.Task<string> ExtendSessionAsync(string sessionID) {
            return base.Channel.ExtendSessionAsync(sessionID);
        }
        
        public void SessionTimeout(string sessionID) {
            base.Channel.SessionTimeout(sessionID);
        }
        
        public System.Threading.Tasks.Task SessionTimeoutAsync(string sessionID) {
            return base.Channel.SessionTimeoutAsync(sessionID);
        }
    }
}
